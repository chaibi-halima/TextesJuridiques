<?php

namespace Culture\JuridiqueBundle\Repository;

/**
 * TexteJuridiqueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TexteJuridiqueRepository extends \Doctrine\ORM\EntityRepository {

    public function findTexteByParametres($data) {

        $query = $this->createQueryBuilder('a')
        /*->leftJoin('CultureJuridiqueBundle:jort', 'j', 'WITH', 'a.jort= j.id')*/;
        
        if ($data['typetexte'] != '' && $data['typetexte'] != 'Choisir Type Texte') {
   
            $query->andWhere('a.typetexte = :typetexte')
                    ->setParameter('typetexte', $data['typetexte']);
        }
        if ($data['annee'] != '') {
        $annee=$data['annee'];
        $query->andWhere("SUBSTRING(a.date, 1, 4) = :annee")
               ->setParameter('annee', $annee);
        
        }
        if ($data['numero'] != '') {

            $query->andWhere('a.numero = :numero')
                    ->setParameter('numero', $data['numero']);
        }
        if ($data['date'] != '') {

            $query->andWhere('a.date = :date')
                    ->setParameter('date', $data['date']);
        }
        if ($data['domaine'] != '' && $data['domaine'] != 'Choisir Domaine Culturel') {

            $query->andWhere('a.domaine = :domaine')
                    ->setParameter('domaine', $data['domaine']);
        }
        
        if ($data['anneejort'] != '') {
        $anneejort=$data['anneejort'];
        $query->andWhere("SUBSTRING(a.date_jort, 1, 4) = :anneejort")
               ->setParameter('anneejort', $anneejort);
        
        }
        
        if ($data['jort'] != '') {

            $query->andWhere('a.jort = :jort')
                    ->setParameter('jort', $data['jort']);
        }
        if ($data['datejort'] != '') {
           
            $query->andWhere('a.date_jort = :datejort')
                   ->setParameter('datejort', $data['datejort']);

        }
                
        return $query->getQuery()->getResult();
    }
    
    public function findOrdrebByDate() {

        $query = $this->createQueryBuilder('a');
        $query->orderBy('a.date', 'DESC');
       
        return $query->getQuery()->getResult();
    }
    public function listeJort()
    {
        $query = $this->createQueryBuilder('a');
        $query->andWhere("a.jort != 'NULL' ")
        ->orderBy('a.date', 'DESC')
        ->groupBy('a.jort');

 
       return $query->getQuery()->getResult();;
    }
    public function findAllJort($jort) {

        $query = $this->createQueryBuilder('a');
        $query->andWhere('a.jort = :jort_id')
              ->setParameter('jort_id', $jort)
              ->orderBy('a.date', 'DESC');
        
         
        return $query->getQuery()->getResult();
    }
    
    public function findAllNominations() {

        $query = $this->createQueryBuilder('a');
        $query->andWhere('a.nomination = :nomination')
              ->setParameter('nomination', 1)
              ->orderBy('a.date', 'DESC');
        
         
        return $query->getQuery()->getResult();
    }
    
    public function findAllConventions() {

        $query = $this->createQueryBuilder('a') 
                ->leftJoin('CultureJuridiqueBundle:TypeTexte', 't', 'WITH', 'a.typetexte= t.id');
        $query->andWhere('t.id LIKE :id')
              
              ->setParameter('id', '1')
              ->orderBy('a.date', 'DESC');
        
         
        return $query->getQuery()->getResult();
    }
    
   
    public function findAllCirculaires() {

        $query = $this->createQueryBuilder('a') 
                ->leftJoin('CultureJuridiqueBundle:TypeTexte', 't', 'WITH', 'a.typetexte= t.id');
        $query->andWhere('t.id LIKE :id')
              
              ->setParameter('id', '10')
              ->orderBy('a.date', 'DESC');
        
         
        return $query->getQuery()->getResult();
    }

 
}
